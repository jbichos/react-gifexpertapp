{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFecthGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","useFecthGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","img","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAqCeA,EAlCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAM,YACpB,MAAO,CACHC,GAFyC,EAAvBA,GAGlBC,MAHyC,EAAnBA,MAItBT,IAJyC,EAAZU,OAIjBC,iBAAiBX,QAVlB,kBAcZM,GAdY,4CAAH,sDC6BTM,EA5BM,SAACd,GAElB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAlBAC,qBAAW,WAEPnB,EAAQC,GACHmB,MAAM,SAAAC,GACHH,EAAS,CACPV,KAAMa,EACNL,SAAS,SAGrB,CAACf,IASIgB,GCdIK,EAZK,SAAC,GAAiB,IAAhBV,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAIxB,OACI,sBAAKoB,UAAU,6CAAf,UACI,qBAAKC,IAAMrB,EAAMsB,IAAMb,IACvB,4BAAIA,QC2BDc,EA9BC,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAGf,EAA+Bc,EAAad,GAAhCY,EAAZ,EAAOL,KAAaQ,EAApB,EAAoBA,QAQpB,OACI,qCACI,oBAAIO,UAAU,wCAAd,SAAuDtB,IACrDe,GAAW,mBAAGO,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQV,EAAOH,KAAK,SAAAiB,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIhB,aCOtBiB,EA7BM,WAEjB,MAAoCzC,mBAAS,CAAC,gBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MChBjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.842c9ef1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from  'prop-types';\r\n\r\nconst AddCategory = ( {setCategorias} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategorias( cats => [inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {/* <h2>Add Category</h2> */}\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />  \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","\r\n\r\n    export const getGifs = async (category) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=CgeR3pkFnBwB45rClFdODnFlwOlFvNRg`;\r\n        const resp = await fetch( url );\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map ( ({id, title, images}) => {\r\n            return {\r\n                id,\r\n                title,\r\n                url: images.downsized_medium.url\r\n            }\r\n        });\r\n\r\n        return gifs;\r\n        // setImages(gifs);\r\n    }","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nconst useFecthGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setState({\r\n                  data: imgs,\r\n                  loading: false  \r\n                });\r\n            });\r\n    },[category]);\r\n\r\n    // setTimeout( () => {\r\n    //     setState({\r\n    //         data: [1,2,3,4,5,6],\r\n    //         loading: false\r\n    //     });\r\n    // },3000)\r\n\r\n    return state;\r\n}\r\n\r\nexport default useFecthGifs\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({title,url}) => {\r\n\r\n    // console.log({title,url});\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeft\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","// import React, { useState, useEffect } from 'react';\r\nimport React from 'react';\r\nimport useFecthGifs from '../hooks/useFecthGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const {data:images, loading} = useFecthGifs(category);\r\n\r\n    // useEffect ( () => {\r\n    //     getGifs(category)\r\n    //         // .then( imgs => setImages( imgs) )\r\n    //         .then( setImages );\r\n    // }, [category] );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__backInLeft\">{category}</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            {/* { loading ? 'Cargando...' : 'Data cargada'} */}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img} \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['Dragon Ball']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategorias([ ...categorias, 'Bitxo']);\r\n    //     // setCategorias( cats => [...cats, 'Bitxo']);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={ setCategorias } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map( category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}